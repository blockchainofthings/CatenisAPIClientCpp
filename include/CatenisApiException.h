//  CatenisApiException.h
//
//  Created by R. Benson Evans on 2/20/2018.
//
#ifndef __CATENISAPIEXCEPTION_H__
#define __CATENISAPIEXCEPTION_H__

#include <iostream>
#include <sstream>
#include <string>


namespace ctn
{

struct ApiErrorResponse {
	std::string status;
	std::string message;
};

/*
 * Catenis Exceptions (base class) to be thrown or for catching all errors.
 *
 * @member errorMessage : A description of the error.
 */
class CatenisAPIException
{
public:
    explicit CatenisAPIException(std::string error_message) : errorMessage(error_message) {}
    virtual ~CatenisAPIException() = default;

    virtual std::string getErrorMessage() {return(errorMessage);}
    virtual std::string getErrorDescription() = 0;

protected:
	std::string errorMessage; 
};

/*
 * Catenis Exceptions to be thrown on errors generated by the API methods.
 * This Exception will be called for HTTP status codes != 200.
 *
 * @member httpStatusCode : The http server error code.
 * @member jsonMessage : The returned Json string from the Catenis servers.
 * @member jsonErrorMessage : The parsed out error message contained in the Json string.
 *
 */
class CatenisAPIError : public CatenisAPIException
{
public:
	CatenisAPIError(std::string error_message, int http_status_code, ApiErrorResponse &error_response)
			: CatenisAPIException(error_message), httpStatusCode(http_status_code), jsonErrorMessage(error_response.message) {}
    ~CatenisAPIError() override = default;

    int getHttpStatusCode() { return(httpStatusCode); }
	std::string getErrorMessage() override {
		return jsonErrorMessage.empty() ? errorMessage : jsonErrorMessage;
	}
	std::string getErrorDescription() override {
		std::ostringstream oss;

		oss << "API error: [" << httpStatusCode << "] - " << getErrorMessage();

		return oss.str();
	}

private:
	int httpStatusCode;
    std::string jsonErrorMessage;
};

/*
 * Catenis Exceptions to be thrown on errors generated by the client methods.
 *
 */
class CatenisClientError : public CatenisAPIException
{
public:
    explicit CatenisClientError(std::string error_message) : CatenisAPIException(error_message) {}
    ~CatenisClientError() override = default;

    std::string getErrorDescription() override { return("Client error: " + errorMessage); }
};

}
#endif
